{"ast":null,"code":"import { Cart } from '../shared/models/Cart';\nimport { CartItem } from '../shared/models/Cartitem';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cart = new Cart();\n  }\n  addtToCart(food) {\n    let cartItem = this.cart.items.find(item => item.food.id === food.id);\n    if (cartItem) {\n      this.changeQuantity(food.id, cartItem.quantity + 1);\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n  }\n  removeFromCart(foodId) {\n    this.cart.items = this.cart.items.filter(item => item.food.id != foodId);\n  }\n  changeQuantity(quantity, foodId) {\n    let cartItem = this.cart.items.find(item => item.food.id === foodId);\n    if (!cartItem) return;\n    CartItem.quantity = quantity;\n  }\n  getCart() {\n    return this.cart;\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Cart","CartItem","CartService","constructor","cart","addtToCart","food","cartItem","items","find","item","id","changeQuantity","quantity","push","removeFromCart","foodId","filter","getCart","factory","ɵfac","providedIn"],"sources":["C:\\Users\\91909\\Documents\\Ecommerce\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cart } from '../shared/models/Cart';\nimport { Foods } from '../shared/models/food';\nimport { CartItem } from '../shared/models/Cartitem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private cart:Cart = new Cart();\n  addtToCart(food:Foods) :void{\n    let cartItem = this.cart.items.find(item => item.food.id === food.id)\n    if(cartItem){\n      this.changeQuantity(food.id , cartItem.quantity + 1)\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n  }\n  removeFromCart(foodId:number):void{\n    this.cart.items = this.cart.items.filter(item => item.food.id!=foodId);\n  }\n  changeQuantity(quantity:number,foodId:number){\n    let cartItem = this.cart.items.find(item => item.food.id === foodId);\n    if(!cartItem) return;\n      CartItem.quantity = quantity;\n    \n  }\n  getCart():Cart{\n    return this.cart;\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,uBAAuB;AAE5C,SAASC,QAAQ,QAAQ,2BAA2B;;AAKpD,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAIU,KAAAC,IAAI,GAAQ,IAAIJ,IAAI,EAAE;;EAC9BK,UAAUA,CAACC,IAAU;IACnB,IAAIC,QAAQ,GAAG,IAAI,CAACH,IAAI,CAACI,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAACK,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;IACrE,IAAGJ,QAAQ,EAAC;MACV,IAAI,CAACK,cAAc,CAACN,IAAI,CAACK,EAAE,EAAGJ,QAAQ,CAACM,QAAQ,GAAG,CAAC,CAAC;MACpD;;IAEF,IAAI,CAACT,IAAI,CAACI,KAAK,CAACM,IAAI,CAAC,IAAIb,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC1C;EACAS,cAAcA,CAACC,MAAa;IAC1B,IAAI,CAACZ,IAAI,CAACI,KAAK,GAAG,IAAI,CAACJ,IAAI,CAACI,KAAK,CAACS,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAACK,EAAE,IAAEK,MAAM,CAAC;EACxE;EACAJ,cAAcA,CAACC,QAAe,EAACG,MAAa;IAC1C,IAAIT,QAAQ,GAAG,IAAI,CAACH,IAAI,CAACI,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAACK,EAAE,KAAKK,MAAM,CAAC;IACpE,IAAG,CAACT,QAAQ,EAAE;IACZN,QAAQ,CAACY,QAAQ,GAAGA,QAAQ;EAEhC;EACAK,OAAOA,CAAA;IACL,OAAO,IAAI,CAACd,IAAI;EAClB;;AArBWF,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}